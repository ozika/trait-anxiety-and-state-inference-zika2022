df<- as.data.frame(df)
cor.test(df$slope, df$m1m3_diff)
stsw_data <- read.csv(here::here("data/steepness_and_switchpoint_full.csv"))
stsw_data = assign_var_types(fit_data, c("study", "ta", "phase_str", "half_str", "cont", "tabin", "session"))
stsw_data <- read.csv(here::here("data/steepness_and_switchpoint_full.csv"))
stsw_data = assign_var_types(stsw_data, c("study", "ta", "phase_str", "half_str", "cont", "tabin", "session"))
data2 = stsw_data %>%
group_by(id, cont,phase_str, ta, study_str) %>%
summarise_at(c("log_steepness", "steepness"), mean, na.rm = TRUE)
m8a <- lmer(log_steepness ~ ta*cont*phase_str + (1|id) + (1|study_str) , data)
stsw_data <- read.csv(here::here("data/steepness_and_switchpoint_full.csv"))
stsw_data = assign_var_types(stsw_data, c("study", "ta", "phase_str", "half_str", "cont", "tabin", "session"))
data2 = stsw_data %>%
group_by(id, cont,phase_str, ta, study_str) %>%
summarise_at(c("log_steepness", "steepness"), mean, na.rm = TRUE)
m8a <- lmer(log_steepness ~ ta*cont*phase_str + (1|id) + (1|study_str) , data2)
anova(m8a)
stsw_data <- read.csv(here::here("data/steepness_and_switchpoint_full.csv"))
stsw_data = assign_var_types(stsw_data, c("study", "ta", "phase_str", "half_str", "cont", "tabin", "session"))
stsw_data = stsw_data %>%
group_by(id, cont,phase_str, ta, study_str) %>%
summarise_at(c("log_steepness", "steepness","switchpoint"), mean, na.rm = TRUE)
m <- lmer(log_steepness ~ ta*cont*phase_str + (1|id) + (1|study_str) , data2)
anova(m)
col<- "slategray"
### Steepness plot
g <- ggplot(aes(x=cont, y=log_steepness, fill=cont), data=stsw_data) +
geom_flat_violin(position = position_nudge(x = .2, y = 0), lwd=1.2, alpha = .8, show.legend = FALSE) +
geom_point(aes(y = log_steepness, color=cont), position = position_jitter(width = .15), size = 2, alpha = 0.5, show.legend = FALSE) +
geom_boxplot(width = .2, outlier.shape = NA, lwd=1.2,alpha = 0.7, show.legend = FALSE) +
expand_limits(x = 3) +
scale_color_manual(values=c(col, col, col)) +
scale_fill_manual(values=c(col, col, col)) +
# coord_flip() +
theme_bw() +
raincloud_theme +
labs(y= "Estimated (log) Steepness", x="Session")
g
ggsave(here::here("output/figures/Fig_steepness.pdf"), width = 5, height = 4, dpi = 120)
### Switchpoitn plot
col <- "slategray"
g <- ggplot(aes(x=cont, y=switchpoint, fill=cont), data=stsw_data) +
geom_flat_violin(position = position_nudge(x = .2, y = 0), lwd=1.2, alpha = .8, show.legend = FALSE) +
geom_point(aes(y = switchpoint, color=cont), position = position_jitter(width = .15), size = 2, alpha = 0.5, show.legend = FALSE) +
geom_boxplot(width = .2, outlier.shape = NA, lwd=1.2, alpha = 0.7, show.legend = FALSE) +
expand_limits(x = 3) +
scale_color_manual(values=c(col, col, col)) +
scale_fill_manual(values=c(col, col, col)) +
theme_bw() +
raincloud_theme +
labs(y= "Estimated switch point", x="Session")
g
ggsave(here::here("output/figures/Fig_switchpoint.pdf"), width = 5, height = 4, dpi = 120)
fit_data <- read.csv(here::here("data/data_across_mods.csv"))
fit_data = assign_var_types(fit_data, c("study_str", "ta","contingency", "ids" ))
fit_data <- read.csv(here::here("data/data_across_mods.csv"))
fit_data = assign_var_types(fit_data, c("study_str", "ta","contingency", "ids" ))
# m1m3_diff is relative model fit
m4a<-lmer(data=fit_data, m1m3_diff ~ ta*contingency + (1|ids) + (1|study_str))
fit_data <- read.csv(here::here("data/data_across_mods.csv"))
fit_data = assign_var_types(fit_data, c("study", "ta","contingency", "ids" ))
# m1m3_diff is relative model fit
m4a<-lmer(data=fit_data, m1m3_diff ~ ta*contingency + (1|ids) + (1|study_str))
anova(m4a)
joint_tests(m4a, by = "contingency")
fit_data <- read.csv(here::here("data/data_across_mods.csv"))
fit_data = assign_var_types(fit_data, c("study", "ta","contingency", "ids" ))
# m1m3_diff is relative model fit
m4a<-lmer(data=fit_data, m1m3_diff ~ ta*contingency + (1|ids) + (1|study_str))
anova(m4a)
# fit*correlation by session (p-vals uncorrected!)
joint_tests(m4a, by = "contingency")
emtrends(m4a, pairwise ~ contingency, var = "ta")
fit_data <- read.csv(here::here("data/model_fit_final_full.csv"))
fit_data = assign_var_types(fit_data, c("study", "ta","contingency", "ids" ))
# m1m3_diff is relative model fit
m4a<-lmer(data=fit_data, m1m3_diff ~ ta*contingency + (1|ids) + (1|study_str))
anova(m4a)
# fit*correlation by session (p-vals uncorrected!)
joint_tests(m4a, by = "contingency")
# contrasts ta*fit effects between sessions (p-vals adjusted)
emtrends(m4a, pairwise ~ contingency, var = "ta")
df = fit_data %>%
group_by(ids,contingency,ta) %>%
summarise_at(c("m1_BIC","m3_BIC"), mean, na.rm = TRUE)
df <- df %>% gather(model, BIC, m1_BIC:m3_BIC)
dem_df <- df %>%
group_by(contingency) %>%
summarise_at(c("BIC"), mean, na.rm = TRUE)
dem_df$BICmean <- dem_df$BIC
dem_df$BIC <- NaN
df<- merge(x = df, y = dem_df, by = "contingency", all.x = TRUE)
df$BIC_demean <- df$BIC.x - df$BICmean
df_summ = df %>%
group_by(model, contingency) %>%
summarise_each(funs(mean,sd,se=sd(.)/sqrt(n())), BIC_demean)
g <- ggplot(df_summ, aes(x=model, y=mean, fill=model)) +
geom_bar(inherit.aes = TRUE, stat = "summary", fun.y = "mean", color="black", show.legend = FALSE, width=0.8, lwd=1) +
scale_fill_manual(values = pal[c(15,16)]) +
scale_x_discrete(labels=c("1-state", "n-state")) +
labs(y= "BIC (demeaned)", x="")  +
facet_grid(~contingency) +
theme_bw() +
raincloud_theme
g
ggsave(here::here("output/figures/Fig_model_comparison.pdf"), width = 5, height = 4, dpi = 120)
df = fit_data %>%
group_by(ids,contingency,ta) %>%
summarise_at(c("m1_BIC","m3_BIC"), mean, na.rm = TRUE)
df <- df %>% gather(model, BIC, m1_BIC:m3_BIC)
dem_df <- df %>%
group_by(contingency) %>%
summarise_at(c("BIC"), mean, na.rm = TRUE)
dem_df$BICmean <- dem_df$BIC
dem_df$BIC <- NaN
df<- merge(x = df, y = dem_df, by = "contingency", all.x = TRUE)
df$BIC_demean <- df$BIC.x - df$BICmean
df_summ = df %>%
group_by(model, contingency) %>%
summarise_each(funs(mean), BIC_demean)
g <- ggplot(df_summ, aes(x=model, y=mean, fill=model)) +
geom_bar(inherit.aes = TRUE, stat = "summary", fun.y = "mean", color="black", show.legend = FALSE, width=0.8, lwd=1) +
scale_fill_manual(values = pal[c(15,16)]) +
scale_x_discrete(labels=c("1-state", "n-state")) +
labs(y= "BIC (demeaned)", x="")  +
facet_grid(~contingency) +
theme_bw() +
raincloud_theme
g
df = fit_data %>%
group_by(ids,contingency,ta) %>%
summarise_at(c("m1_BIC","m3_BIC"), mean, na.rm = TRUE)
df <- df %>% gather(model, BIC, m1_BIC:m3_BIC)
dem_df <- df %>%
group_by(contingency) %>%
summarise_at(c("BIC"), mean, na.rm = TRUE)
dem_df$BICmean <- dem_df$BIC
dem_df$BIC <- NaN
df<- merge(x = df, y = dem_df, by = "contingency", all.x = TRUE)
df$BIC_demean <- df$BIC.x - df$BICmean
df_summ = df %>%
group_by(model, contingency) %>%
summarise_each(funs(mean,sd), BIC_demean)
g <- ggplot(df_summ, aes(x=model, y=mean, fill=model)) +
geom_bar(inherit.aes = TRUE, stat = "summary", fun.y = "mean", color="black", show.legend = FALSE, width=0.8, lwd=1) +
scale_fill_manual(values = pal[c(15,16)]) +
scale_x_discrete(labels=c("1-state", "n-state")) +
labs(y= "BIC (demeaned)", x="")  +
facet_grid(~contingency) +
theme_bw() +
raincloud_theme
g
ggsave(here::here("output/figures/Fig_model_comparison.pdf"), width = 5, height = 4, dpi = 120)
pal
pal2
df = fit_data %>%
group_by(ids,contingency,ta) %>%
summarise_at(c("m1_BIC","m3_BIC"), mean, na.rm = TRUE)
df <- df %>% gather(model, BIC, m1_BIC:m3_BIC)
dem_df <- df %>%
group_by(contingency) %>%
summarise_at(c("BIC"), mean, na.rm = TRUE)
dem_df$BICmean <- dem_df$BIC
dem_df$BIC <- NaN
df<- merge(x = df, y = dem_df, by = "contingency", all.x = TRUE)
df$BIC_demean <- df$BIC.x - df$BICmean
df_summ = df %>%
group_by(model, contingency) %>%
summarise_each(funs(mean,sd), BIC_demean)
g <- ggplot(df_summ, aes(x=model, y=mean, fill=model)) +
geom_bar(inherit.aes = TRUE, stat = "summary", fun.y = "mean", color="black", show.legend = FALSE, width=0.8, lwd=1) +
scale_fill_manual(values = pal2[c(15,16)]) +
scale_x_discrete(labels=c("1-state", "n-state")) +
labs(y= "BIC (demeaned)", x="")  +
facet_grid(~contingency) +
theme_bw() +
raincloud_theme
g
ggsave(here::here("output/figures/Fig_model_comparison.pdf"), width = 5, height = 4, dpi = 120)
df = fit_data %>%
group_by(ids,contingency,ta) %>%
summarise_at(c("m1_BIC","m3_BIC"), mean, na.rm = TRUE)
df <- df %>% gather(model, BIC, m1_BIC:m3_BIC)
dem_df <- df %>%
group_by(contingency) %>%
summarise_at(c("BIC"), mean, na.rm = TRUE)
dem_df$BICmean <- dem_df$BIC
dem_df$BIC <- NaN
df<- merge(x = df, y = dem_df, by = "contingency", all.x = TRUE)
df$BIC_demean <- df$BIC.x - df$BICmean
df_summ = df %>%
group_by(model, contingency) %>%
summarise_each(funs(mean,sd), BIC_demean)
g <- ggplot(df_summ, aes(x=model, y=mean, fill=model)) +
geom_bar(inherit.aes = TRUE, stat = "summary", color="black", show.legend = FALSE, width=0.8, lwd=1) +
scale_fill_manual(values = pal2[c(15,16)]) +
scale_x_discrete(labels=c("1-state", "n-state")) +
labs(y= "BIC (demeaned)", x="")  +
facet_grid(~contingency) +
theme_bw() +
raincloud_theme
g
ggsave(here::here("output/figures/Fig_model_comparison.pdf"), width = 5, height = 4, dpi = 120)
required_packages = c("ggplot2", "Jmisc", "sjmisc", "plyr", "lme4", "lmerTest", "emmeans", "tidyr", "dplyr", "ggpubr", "purrr", "broom", "PupillometryR", "plotrix", "VGAM")
pacman::p_load(char = required_packages)
source(here::here("utils/r_functions.R"))
renv::snapshot()
c<-cor.test(fit_data$ta, fit_data$m1m3_diff)
c
df <- fit_data[fit_data$contingency %in% c("90/10"),]
g <- ggplot(data = df, aes(x = m1m3_diff, y = ta, color=(m1m3_diff) )) +
geom_point( size = 5, alpha = 1, show.legend = FALSE) +
geom_smooth(method='lm', formula= y~x, alpha=0.3, show.legend = FALSE, color="black", fill="lightgray") +
scale_color_gradient2(low=pal[15], midpoint = 0, mid = "grey39", high=pal[16]) +
geom_vline(xintercept = 0, linetype = "longdash") +
theme_bw() +
stat_cor(method = "pearson",  alternative = "two.sided",  cor.coef.name = c("r"),  label.sep = ", ",  label.x.npc = "left",  label.y.npc = "top", digits = 3, r.digits = 3, p.digits = 3) +
raincloud_theme +
labs(y= "Trait anxiety", x="Relative fit")
g
ggsave(here::here("output/figures/Fig_model_fit_and_anxiety.pdf"), width = 5, height = 4, dpi = 120)
df <- fit_data[fit_data$contingency %in% c("90/10"),]
g <- ggplot(data = df, aes(x = m1m3_diff, y = ta, color=(m1m3_diff) )) +
geom_point( size = 5, alpha = 1, show.legend = FALSE) +
geom_smooth(method='lm', formula= y~x, alpha=0.3, show.legend = FALSE, color="black", fill="lightgray") +
scale_color_gradient2(low=pal2[15], midpoint = 0, mid = "grey39", high=pal2[16]) +
geom_vline(xintercept = 0, linetype = "longdash") +
theme_bw() +
stat_cor(method = "pearson",  alternative = "two.sided",  cor.coef.name = c("r"),  label.sep = ", ",  label.x.npc = "left",  label.y.npc = "top", digits = 3, r.digits = 3, p.digits = 3) +
raincloud_theme +
labs(y= "Trait anxiety", x="Relative fit")
g
ggsave(here::here("output/figures/Fig_model_fit_and_anxiety.pdf"), width = 5, height = 4, dpi = 120)
required_packages = c("ggplot2", "Jmisc", "sjmisc", "plyr", "lme4", "lmerTest", "emmeans", "tidyr", "dplyr", "ggpubr", "purrr", "broom", "PupillometryR", "plotrix", "VGAM", "reshape2")
pacman::p_load(char = required_packages)
source(here::here("utils/r_functions.R"))
mflr_data <- read.csv(here::here("data/model_fit_final_full.csv"))
mflr_data = assign_var_types(mflr_data, c("study", "lrtype", "ta","contingency", "ids" ))
mflr_data$tabin
# Load calcualted model-free learning rates
mflr_data <- read.csv(here::here("data/oddball_data_n5.csv"))
mflr_data = assign_var_types(mflr_data, c("study", "lrtype", "ta","contingency", "ids" ))
df <- melt(mflr_data, measure.vars=c("mflr_sh","mflr_nosh"),
value.name = "mflr_melted", variable.name="outcome")
df$outcome = as.factor(df$outcome)
# Load model fit data
fit_data <- read.csv(here::here("data/model_fit_final_full.csv"))
fit_data = assign_var_types(fit_data, c("study", "ta","contingency", "ids" ))
fit_data["best_model"] <- apply(fit_data[,c("m1_BIC", "m3_BIC")], 1, which.min)
fit_data$best_model <- mapvalues(fit_data$best_model,
from = c(1,2),
to =c("1-state", "n-state"))
fit_data <- fit_data[,c("specID", "best_model")]
df <-merge(df, fit_data, by="specID")
pal <- get_colors("ukr")
g <- ggplot(data = df, aes(y = mflr_overall, x = best_model, fill = interaction(best_model, lrtype))) +
geom_flat_violin(position = position_nudge(x = .2, y = 0), alpha = .8, lwd=1.2, show.legend = TRUE) +
geom_point(aes(color= interaction( best_model, lrtype)), position =   position_jitterdodge(  jitter.width = .15,  dodge.width = 0.25), size = 2, alpha = 0.5, show.legend=FALSE) +
geom_boxplot(width = .2, outlier.shape = NA, alpha = 0.7, lwd=1.2, show.legend = FALSE) +
expand_limits(x = 3) +
scale_color_manual(values = pal[c(1,3,2,4)] ) +
scale_fill_manual(values = pal[c(1,3,2,4)]) +
theme_bw() +
raincloud_theme +
theme(legend.position = "right") +
labs(y= "Learning rate", x="") +
scale_x_discrete(labels=c("common" = "Meaningful", "odd" =  "Oddball")) +
guides(fill=guide_legend(nrow=4,byrow=TRUE))
g
# Load calcualted model-free learning rates
mflr_data <- read.csv(here::here("data/oddball_data_n5.csv"))
mflr_data<- mflr_data[mflr_data$contingency %in% "90/10",]
mflr_data = assign_var_types(mflr_data, c("study", "lrtype", "ta","contingency", "ids" ))
df <- melt(mflr_data, measure.vars=c("mflr_sh","mflr_nosh"),
value.name = "mflr_melted", variable.name="outcome")
df$outcome = as.factor(df$outcome)
pal <- get_colors("ukr")
g <- ggplot(data = df, aes(y = mflr_overall, x = best_model, fill = interaction(best_model, tabin))) +
geom_flat_violin(position = position_nudge(x = .2, y = 0), alpha = .8, lwd=1.2, show.legend = TRUE) +
geom_point(aes(color= interaction( best_model, lrtype)), position =   position_jitterdodge(  jitter.width = .15,  dodge.width = 0.25), size = 2, alpha = 0.5, show.legend=FALSE) +
geom_boxplot(width = .2, outlier.shape = NA, alpha = 0.7, lwd=1.2, show.legend = FALSE) +
expand_limits(x = 3) +
scale_color_manual(values = pal[c(1,3,2,4)] ) +
scale_fill_manual(values = pal[c(1,3,2,4)]) +
theme_bw() +
raincloud_theme +
theme(legend.position = "right") +
labs(y= "Learning rate", x="") +
scale_x_discrete(labels=c("common" = "Meaningful", "odd" =  "Oddball")) +
guides(fill=guide_legend(nrow=4,byrow=TRUE))
g
# Load calcualted model-free learning rates
mflr_data <- read.csv(here::here("data/oddball_data_n5.csv"))
mflr_data<- mflr_data[mflr_data$contingency %in% "90/10",]
mflr_data = assign_var_types(mflr_data, c("study", "lrtype", "ta","contingency", "ids" ))
df <- melt(mflr_data, measure.vars=c("mflr_sh","mflr_nosh"),
value.name = "mflr_melted", variable.name="outcome")
df$outcome = as.factor(df$outcome)
pal <- get_colors("ukr")
g <- ggplot(data = df, aes(y = mflr_overall, x = tabin, fill = interaction(tabin, lrtype))) +
geom_flat_violin(position = position_nudge(x = .2, y = 0), alpha = .8, lwd=1.2, show.legend = TRUE) +
geom_point(aes(color= interaction( best_model, lrtype)), position =   position_jitterdodge(  jitter.width = .15,  dodge.width = 0.25), size = 2, alpha = 0.5, show.legend=FALSE) +
geom_boxplot(width = .2, outlier.shape = NA, alpha = 0.7, lwd=1.2, show.legend = FALSE) +
expand_limits(x = 3) +
scale_color_manual(values = pal[c(1,3,2,4)] ) +
scale_fill_manual(values = pal[c(1,3,2,4)]) +
theme_bw() +
raincloud_theme +
theme(legend.position = "right") +
labs(y= "Learning rate", x="") +
scale_x_discrete(labels=c("common" = "Meaningful", "odd" =  "Oddball")) +
guides(fill=guide_legend(nrow=4,byrow=TRUE))
g
# Load calcualted model-free learning rates
mflr_data <- read.csv(here::here("data/oddball_data_n5.csv"))
mflr_data<- mflr_data[mflr_data$contingency %in% "90/10",]
mflr_data = assign_var_types(mflr_data, c("study", "lrtype", "ta","contingency", "ids" ))
df <- melt(mflr_data, measure.vars=c("mflr_sh","mflr_nosh"),
value.name = "mflr_melted", variable.name="outcome")
df$outcome = as.factor(df$outcome)
pal <- get_colors("ukr")
g <- ggplot(data = df, aes(y = mflr_overall, x = tabin, fill = interaction(tabin, lrtype))) +
geom_flat_violin(position = position_nudge(x = .2, y = 0), alpha = .8, lwd=1.2, show.legend = TRUE) +
geom_point(aes(color= interaction( tabin, lrtype)), position =   position_jitterdodge(  jitter.width = .15,  dodge.width = 0.25), size = 2, alpha = 0.5, show.legend=FALSE) +
geom_boxplot(width = .2, outlier.shape = NA, alpha = 0.7, lwd=1.2, show.legend = FALSE) +
expand_limits(x = 3) +
scale_color_manual(values = pal[c(1,3,2,4)] ) +
scale_fill_manual(values = pal[c(1,3,2,4)]) +
theme_bw() +
raincloud_theme +
theme(legend.position = "right") +
labs(y= "Learning rate", x="") +
scale_x_discrete(labels=c("common" = "Meaningful", "odd" =  "Oddball")) +
guides(fill=guide_legend(nrow=4,byrow=TRUE))
g
# Load calcualted model-free learning rates
mflr_data <- read.csv(here::here("data/oddball_data_n5.csv"))
mflr_data<- mflr_data[mflr_data$contingency %in% "90/10",]
mflr_data = assign_var_types(mflr_data, c("study", "lrtype", "ta","contingency", "ids" ))
pal <- get_colors("ukr")
g <- ggplot(data = mflr_data, aes(y = mflr_overall, x = tabin, fill = interaction(tabin, lrtype))) +
geom_flat_violin(position = position_nudge(x = .2, y = 0), alpha = .8, lwd=1.2, show.legend = TRUE) +
geom_point(aes(color= interaction( tabin, lrtype)), position =   position_jitterdodge(  jitter.width = .15,  dodge.width = 0.25), size = 2, alpha = 0.5, show.legend=FALSE) +
geom_boxplot(width = .2, outlier.shape = NA, alpha = 0.7, lwd=1.2, show.legend = FALSE) +
expand_limits(x = 3) +
scale_color_manual(values = pal[c(1,3,2,4)] ) +
scale_fill_manual(values = pal[c(1,3,2,4)]) +
theme_bw() +
raincloud_theme +
theme(legend.position = "right") +
labs(y= "Learning rate", x="") +
scale_x_discrete(labels=c("common" = "Meaningful", "odd" =  "Oddball")) +
guides(fill=guide_legend(nrow=4,byrow=TRUE))
g
View(mflr_data)
View(mflr_data)
required_packages = c("ggplot2", "Jmisc", "sjmisc", "plyr", "lme4", "lmerTest", "emmeans", "tidyr", "dplyr", "ggpubr", "purrr", "broom", "PupillometryR", "plotrix", "VGAM", "reshape2")
pacman::p_load(char = required_packages)
source(here::here("utils/r_functions.R"))
m<- lmer(data=mflr_data, mflr_overall ~ lrtype*ta + (1|ids))
anova(m)
mflr_data <- read.csv(here::here("data/oddball_data_n5.csv"))
mflr_data<- mflr_data[mflr_data$contingency %in% "90/10",]
mflr_data = assign_var_types(mflr_data, c("study", "lrtype", "ta","contingency", "ids" ))
m<- lmer(data=mflr_data, mflr_overall ~ lrtype*ta + (1|ids))
anova(m)
m5a<-lmer(mflr_melted ~ ta*contingency*lrtype*outcome + (1|ids) + (1|study_str), df2)
# Load calcualted model-free learning rates
mflr_data <- read.csv(here::here("data/oddball_data_n5.csv"))
mflr_data<- mflr_data[mflr_data$contingency %in% "90/10",]
mflr_data = assign_var_types(mflr_data, c("study", "lrtype", "ta","contingency", "ids" ))
df <- melt(mflr_data, measure.vars=c("mflr_sh","mflr_nosh"),
value.name = "mflr_melted", variable.name="outcome_str")
df = assign_var_types(df, c("outcome_str" ))
m5a<-lmer(mflr_melted ~ ta*contingency*lrtype*outcome + (1|ids) + (1|study_str), df2)
# Load calcualted model-free learning rates
mflr_data <- read.csv(here::here("data/oddball_data_n5.csv"))
mflr_data<- mflr_data[mflr_data$contingency %in% "90/10",]
mflr_data = assign_var_types(mflr_data, c("study", "lrtype", "ta","contingency", "ids" ))
df <- melt(mflr_data, measure.vars=c("mflr_sh","mflr_nosh"),
value.name = "mflr", variable.name="outcome_str")
df = assign_var_types(df, c("outcome_str" ))
m5a<-lmer(mflr ~ ta*contingency*lrtype*outcome + (1|ids) + (1|study_str), df2)
# Load calcualted model-free learning rates
mflr_data <- read.csv(here::here("data/oddball_data_n5.csv"))
mflr_data<- mflr_data[mflr_data$contingency %in% "90/10",]
mflr_data = assign_var_types(mflr_data, c("study", "lrtype", "ta","contingency", "ids" ))
df <- melt(mflr_data, measure.vars=c("mflr_sh","mflr_nosh"),
value.name = "mflr", variable.name="outcome_str")
df = assign_var_types(df, c("outcome_str" ))
m5a<-lmer(mflr ~ ta*contingency*lrtype*outcome + (1|ids) + (1|study_str), df)
# Load calcualted model-free learning rates
mflr_data <- read.csv(here::here("data/oddball_data_n5.csv"))
mflr_data<- mflr_data[mflr_data$contingency %in% "90/10",]
mflr_data = assign_var_types(mflr_data, c("study", "lrtype", "ta","contingency", "ids" ))
df <- melt(mflr_data, measure.vars=c("mflr_sh","mflr_nosh"),
value.name = "mflr", variable.name="outcome_str")
df = assign_var_types(df, c("outcome_str" ))
m5a<-lmer(mflr ~ ta*contingency*lrtype*outcome_str + (1|ids) + (1|study_str), df)
# Load calcualted model-free learning rates
mflr_data <- read.csv(here::here("data/oddball_data_n5.csv"))
#mflr_data<- mflr_data[mflr_data$contingency %in% "90/10",]
mflr_data = assign_var_types(mflr_data, c("study", "lrtype", "ta","contingency", "ids" ))
df <- melt(mflr_data, measure.vars=c("mflr_sh","mflr_nosh"),
value.name = "mflr", variable.name="outcome_str")
df = assign_var_types(df, c("outcome_str" ))
m5a<-lmer(mflr ~ ta*contingency*lrtype*outcome_str + (1|ids) + (1|study_str), df)
anova(m5a)
em5a = emmeans(m5a, specs = pairwise ~ contingency:outcome)
em5a = emmeans(m5a, specs = pairwise ~ contingency:outcome_str)
em5a$emmeans
# Load calcualted model-free learning rates
mflr_data <- read.csv(here::here("data/oddball_data_n5.csv"))
#mflr_data<- mflr_data[mflr_data$contingency %in% "90/10",]
mflr_data = assign_var_types(mflr_data, c("study", "lrtype", "ta","contingency", "ids" ))
df <- melt(mflr_data, measure.vars=c("mflr_sh","mflr_nosh"),
value.name = "mflr", variable.name="outcome_str")
df = assign_var_types(df, c("outcome_str" ))
m5a<-lmer(mflr ~ ta*contingency*lrtype*outcome_str + (1|ids) + (1|study_str), df)
anova(m5a)
# post hocs
em5a1 = emmeans(m5a, specs = pairwise ~ contingency:outcome_str)
em5a1$emmeans
em5a1$contrasts
em5a2 = emmeans(m5a, specs = pairwise ~ outcome_str)
em5a2$emmeans
em5a2$contrasts
# relationship with anxiety
emtrends(m5a, pairwise ~ lrtype, var = "ta")
pal <- get_colors("ukr")
g <- ggplot(data = mflr_data, aes(y = mflr_overall, x = tabin, fill = interaction(tabin, lrtype))) +
geom_flat_violin(position = position_nudge(x = .2, y = 0), alpha = .8, lwd=1.2, show.legend = TRUE) +
geom_point(aes(color= interaction( tabin, lrtype)), position =   position_jitterdodge(  jitter.width = .15,  dodge.width = 0.25), size = 2, alpha = 0.5, show.legend=FALSE) +
geom_boxplot(width = .2, outlier.shape = NA, alpha = 0.7, lwd=1.2, show.legend = FALSE) +
expand_limits(x = 3) +
scale_color_manual(values = pal[c(1,3,2,4)] ) +
scale_fill_manual(values = pal[c(1,3,2,4)]) +
theme_bw() +
raincloud_theme +
theme(legend.position = "right") +
labs(y= "Learning rate", x="") +
scale_x_discrete(labels=c("common" = "Meaningful", "odd" =  "Oddball")) +
guides(fill=guide_legend(nrow=4,byrow=TRUE))
g
df2 <- df %>%
group_by(contingency, tabin, lrtype) %>%
summarise_at(c("mflr"), mean, na.rm = TRUE)
pal <- get_colors("ukr")
g <- ggplot(data = df2, aes(y = mflr, x = tabin, fill = interaction(tabin, lrtype))) +
geom_flat_violin(position = position_nudge(x = .2, y = 0), alpha = .8, lwd=1.2, show.legend = TRUE) +
geom_point(aes(color= interaction( tabin, lrtype)), position =   position_jitterdodge(  jitter.width = .15,  dodge.width = 0.25), size = 2, alpha = 0.5, show.legend=FALSE) +
geom_boxplot(width = .2, outlier.shape = NA, alpha = 0.7, lwd=1.2, show.legend = FALSE) +
expand_limits(x = 3) +
scale_color_manual(values = pal[c(1,3,2,4)] ) +
scale_fill_manual(values = pal[c(1,3,2,4)]) +
theme_bw() +
raincloud_theme +
theme(legend.position = "right") +
labs(y= "Learning rate", x="") +
scale_x_discrete(labels=c("common" = "Meaningful", "odd" =  "Oddball")) +
guides(fill=guide_legend(nrow=4,byrow=TRUE))
g
df2 <- df %>%
group_by(contingency, tabin, lrtype, ids) %>%
summarise_at(c("mflr"), mean, na.rm = TRUE)
pal <- get_colors("ukr")
g <- ggplot(data = df2, aes(y = mflr, x = tabin, fill = interaction(tabin, lrtype))) +
geom_flat_violin(position = position_nudge(x = .2, y = 0), alpha = .8, lwd=1.2, show.legend = TRUE) +
geom_point(aes(color= interaction( tabin, lrtype)), position =   position_jitterdodge(  jitter.width = .15,  dodge.width = 0.25), size = 2, alpha = 0.5, show.legend=FALSE) +
geom_boxplot(width = .2, outlier.shape = NA, alpha = 0.7, lwd=1.2, show.legend = FALSE) +
expand_limits(x = 3) +
scale_color_manual(values = pal[c(1,3,2,4)] ) +
scale_fill_manual(values = pal[c(1,3,2,4)]) +
theme_bw() +
raincloud_theme +
theme(legend.position = "right") +
labs(y= "Learning rate", x="") +
scale_x_discrete(labels=c("common" = "Meaningful", "odd" =  "Oddball")) +
guides(fill=guide_legend(nrow=4,byrow=TRUE))
g
g <- ggplot(data = odd_model_data, aes(y = mflr_diff, x = best_model, fill =  best_model)) +
geom_flat_violin(position = position_nudge(x = .2, y = 0), alpha = .8, lwd=1.2) +
geom_point(aes(color= best_model), position =   position_jitterdodge(  jitter.width = .45,  dodge.width = 1), size = 2, alpha = 0.5, show.legend=FALSE) +
geom_boxplot(inherit.aes = TRUE, width = 0.25, lwd=1.2, outlier.shape = NA, alpha = 0.7, show.legend = FALSE) +
expand_limits(x = 3) +
scale_color_manual(values = c(pal[1], pal[3], pal[4], pal[3])) +
scale_fill_manual(values = c(pal[1], pal[3], pal[4], pal[3]), name = "", labels = c("1-state", "n-state")) +
theme_bw() +
raincloud_theme +
theme(strip.text.x = element_text(size = 14,  face = "bold"),
strip.background = element_rect(color="black", fill="#ebebeb", size=0, linetype="solid")) +
theme(legend.position = "top") +  #c(0.8, 0.2)
labs(y= "meaningful-oddball", x="model")  +
guides(fill=guide_legend(nrow=1,byrow=TRUE))
odd_model_data <- read.csv(here::here("data/oddball_by_model.csv"))
odd_model_data$best_model <- as.factor(odd_model_data$best_model)
t.test(mflr_diff~best_model, alternative = "two.sided", var.equal = FALSE, data=odd_model_data)
g <- ggplot(data = odd_model_data, aes(y = mflr_diff, x = best_model, fill =  best_model)) +
geom_flat_violin(position = position_nudge(x = .2, y = 0), alpha = .8, lwd=1.2) +
geom_point(aes(color= best_model), position =   position_jitterdodge(  jitter.width = .45,  dodge.width = 1), size = 2, alpha = 0.5, show.legend=FALSE) +
geom_boxplot(inherit.aes = TRUE, width = 0.25, lwd=1.2, outlier.shape = NA, alpha = 0.7, show.legend = FALSE) +
expand_limits(x = 3) +
scale_color_manual(values = c(pal[1], pal[3], pal[4], pal[3])) +
scale_fill_manual(values = c(pal[1], pal[3], pal[4], pal[3]), name = "", labels = c("1-state", "n-state")) +
theme_bw() +
raincloud_theme +
theme(strip.text.x = element_text(size = 14,  face = "bold"),
strip.background = element_rect(color="black", fill="#ebebeb", size=0, linetype="solid")) +
theme(legend.position = "top") +  #c(0.8, 0.2)
labs(y= "meaningful-oddball", x="model")  +
guides(fill=guide_legend(nrow=1,byrow=TRUE))
g
